[project]
name = "dice-roller"
version = "0.0.1"
description = "A simple package to manipulate dice rolls and compute their probabilities."
authors = [{ name = "Renaud Guillon", email = "renaud.guillon@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "matplotlib>=3.9.4",
]

[project.urls]
Homepage = "https://rguillon.github.io/dice-roller/"
Repository = "https://github.com/rguillon/dice-roller"
Documentation = "https://rguillon.github.io/dice-roller/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "ty>=0.0.1a16",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "pytest-sugar>=1.1.1",
    "pytest-mpl>=0.17.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/dice_roller"]

[tool.ty.environment]
python = "./.venv"
python-version = "3.9"

[tool.pytest.ini_options]
testpaths = ["tests"]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "[%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
preview = true
fixable = ["ALL"]
select = ["ALL", "RUF022"]
ignore = [  "COM812",   # cause incompatibility with the formatter
            "ISC001",   # cause incompatibility with the formatter
            "D203",     # conflict with another rule
            "D213",     # conflict with another rule
            # "CPY001",   # No copyright
            "S311",     # Random is good enough, it's not cryptography
            ]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [ "S101",     # Allow assert in tests
              "D100",     # No docstring in tests
              "D101",     # No docstring in tests
              "D102",     # No docstring in tests
              "D103",     # No docstring in tests
              "D105",     # No docstring in tests
              "D107",     # No docstring in tests
              "FBT001",   # Boolean-typed positional argument in function
              "PLR2004",  # Magic values ok in tests
              ]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]


[tool.basedpyright]
# BasedPyright currently seems like the best type checker option, much faster
# than mypy and with a good extension for VSCode/Cursor.
# https://marketplace.visualstudio.com/items?itemName=detachhead.basedpyright
# https://docs.basedpyright.com/latest/configuration/config-files/#sample-pyprojecttoml-file
include = ["src/dice_roller"]
exclude = ["tests"]
extraPaths = ["src"]
typeCheckingMode = "all"
reportUnusedCallResult = false
reportUnknownMemberType = false
reportImplicitOverride = false


[tool.codespell]
# Add here as needed:
# ignore-words-list = "foo,bar"
# skip = "foo.py,bar.py"
